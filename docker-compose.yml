version: '3.8'

services:
  # MySQL 数据库服务
  mysql:
    image: mysql:8.0
    container_name: messageboard-mysql
    restart: unless-stopped
    environment:
      MYSQL_ROOT_PASSWORD: root123456
      MYSQL_DATABASE: messageboard
      MYSQL_USER: messageboard
      MYSQL_PASSWORD: messageboard123
    ports:
      - "3306:3306"
    volumes:
      - mysql_data:/var/lib/mysql
      - ./mysql/init:/docker-entrypoint-initdb.d
    networks:
      - messageboard-network
    command: --default-authentication-plugin=mysql_native_password
    healthcheck:
      test: ["CMD", "mysqladmin", "ping", "-h", "localhost"]
      timeout: 20s
      retries: 10

  # Redis 缓存服务
  redis:
    image: redis:7-alpine
    container_name: messageboard-redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
      - ./redis/redis.conf:/usr/local/etc/redis/redis.conf
    networks:
      - messageboard-network
    command: redis-server /usr/local/etc/redis/redis.conf
    healthcheck:
      test: ["CMD", "redis-cli", "--raw", "incr", "ping"]
      timeout: 3s
      retries: 5

  # Zookeeper 服务（Kafka 依赖）
  zookeeper:
    image: confluentinc/cp-zookeeper:7.4.0
    container_name: messageboard-zookeeper
    restart: unless-stopped
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181
      ZOOKEEPER_TICK_TIME: 2000
    ports:
      - "2181:2181"
    volumes:
      - zookeeper_data:/var/lib/zookeeper/data
      - zookeeper_logs:/var/lib/zookeeper/log
    networks:
      - messageboard-network
    healthcheck:
      test: echo stat | nc localhost 2181
      timeout: 10s
      retries: 5

  # Kafka 消息队列服务
  kafka:
    image: confluentinc/cp-kafka:7.4.0
    container_name: messageboard-kafka
    restart: unless-stopped
    depends_on:
      - zookeeper
    ports:
      - "9092:9092"
      - "9101:9101"
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:29092,PLAINTEXT_HOST://localhost:9092
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
      KAFKA_TRANSACTION_STATE_LOG_MIN_ISR: 1
      KAFKA_TRANSACTION_STATE_LOG_REPLICATION_FACTOR: 1
      KAFKA_GROUP_INITIAL_REBALANCE_DELAY_MS: 0
      KAFKA_JMX_PORT: 9101
      KAFKA_JMX_HOSTNAME: localhost
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
      KAFKA_DELETE_TOPIC_ENABLE: 'true'
    volumes:
      - kafka_data:/var/lib/kafka/data
    networks:
      - messageboard-network
    healthcheck:
      test: ["CMD-SHELL", "kafka-topics --bootstrap-server localhost:9092 --list"]
      timeout: 30s
      retries: 3

  # Kafka 主题初始化服务
  kafka-init:
    image: confluentinc/cp-kafka:7.4.0
    container_name: messageboard-kafka-init
    restart: "no"
    depends_on:
      - kafka
    volumes:
      - ./kafka/init-topics.sh:/init-topics.sh
    networks:
      - messageboard-network
    command: ["/bin/bash", "/init-topics.sh"]

  # Kafka UI 管理界面（可选）
  kafka-ui:
    image: provectuslabs/kafka-ui:latest
    container_name: messageboard-kafka-ui
    restart: unless-stopped
    depends_on:
      - kafka
    ports:
      - "8080:8080"
    environment:
      KAFKA_CLUSTERS_0_NAME: messageboard-cluster
      KAFKA_CLUSTERS_0_BOOTSTRAPSERVERS: kafka:29092
      KAFKA_CLUSTERS_0_ZOOKEEPER: zookeeper:2181
    networks:
      - messageboard-network

  # Redis 管理界面（可选）
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: messageboard-redis-commander
    restart: unless-stopped
    depends_on:
      - redis
    ports:
      - "8081:8081"
    environment:
      REDIS_HOSTS: local:redis:6379:0:redis123
    networks:
      - messageboard-network

volumes:
  mysql_data:
    driver: local
  redis_data:
    driver: local
  zookeeper_data:
    driver: local
  zookeeper_logs:
    driver: local
  kafka_data:
    driver: local

networks:
  messageboard-network:
    driver: bridge
